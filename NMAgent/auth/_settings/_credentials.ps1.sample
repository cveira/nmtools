###############################################################################
# NOTE1: NodeNames CAN'T use the FQDN format. Use host names only. Host names
#        are used to look up the appropriate credentials. Thay is why you
#        should verify your input files or the host names taken from the CLI.
#        Use DNS suffix settings on your local NIC whenever is needed.
#
# NOTE2: If you plan to ENCRYPT your passwords with EncryptCredentials.ps1
#        (it is a highly recommended practice) scape any special character
#        on it with a back slash ("\") whenever it could be interpreted as a
#        .NET RegExp special Char.
###############################################################################

# NodeCredentials ::= {'BFModules_ServiceTag', 'NodeUser', 'NodePassword'}

<#  Example for MultiCredentialMode Settings:

$script:NodeCredentials = @{
  SampleNode01                = 'System', 'NODE01\administrator', "";
  SampleNode02                = 'System', 'NODE02\administrator', "";

  DefaultCredentials          = 'System', 'DOMAIN\administrator', ""
}

#>


<#  Example for BruteForceLoginMode + PerHostBFLogin Settings:

$script:NodeCredentials = @{
  Domain01                    = 'System', 'DOMAIN01\administrator', "";
  Domain02                    = 'System', 'DOMAIN02\administrator', "";
  Domain03                    = 'System', 'DOMAIN03\administrator', ""
}

#>


<#  Example for BruteForceLoginMode + PerModuleBFLogin Settings:

$script:NodeCredentials = @{
  Oracle01                    = 'Oracle', 'oradba', "";
  Oracle02                    = 'Oracle', 'oradba', "";
  mysql01                     = 'MySQL', 'mysqldba', "";
  mysql02                     = 'MySQL', 'mysqldba', "";
  Unix01                      = 'System', 'root', "";
  Unix02                      = 'System', 'root', "";
}

#>